package duokan

import (
	"bytes"
	"fmt"
	"reflect"
	"regexp"
	"testing"
)

func checkErr(t *testing.T, err error) {
	if err != nil {
		t.Errorf("Unexpected error [%s]", err)
	}
}

func TestGetURL(t *testing.T) {
	p := newDefaultProxy(nil)
	expectData := []byte("AiBzdGF0dXMAAm9rIHVybABQaHR0cDovL3BhZ2VzLnJlYWQuZHVva2FuLmNvbS9tZnN2Mi9kb3dubG9hZC9zMDEwL3AwMUhCUkN5RVdkTy9CaXp3dDJKOUZrSWlWSmguanM=")
	data, err := p.getURL("http://www.duokan.com/reader/page/5e5c9d902fbd49c8ae1860a161a83242/iss_0060008_-jUCuT3F0RNRz8f5rM8fuiHqApo")
	checkErr(t, err)
	if bytes.Compare(data, expectData) != 0 {
		t.Errorf("Unexpected data expected[%q] got[%q]", expectData, data)
	}
}

func TestGetBookInfo(t *testing.T) {
	bid := "5e5c9d902fbd49c8ae1860a161a83242"
	l := &Librarian{
		proxy: newLocalProxy(),
	}
	bInfo, err := l.getBookInfo(bid)
	checkErr(t, err)
	expectBInfo := BookInfo{
		Title:    "跟着美剧《老友记》学英语",
		Pages:    make([]*PageInfo, 60),
		Revision: "20151110.1",
	}
	if !compareBook(expectBInfo, bInfo) {
		t.Errorf("Unexpected book info expected[%v] got[%v]", expectBInfo, bInfo)
	}
}

func compareBook(lhs, rhs BookInfo) bool {
	lMap := bookInfoToMap(lhs)
	rMap := bookInfoToMap(rhs)
	return reflect.DeepEqual(lMap, rMap)
}

// bookInfoToMap dumps BookInfo to map, but only record length of array/slice.
func bookInfoToMap(in BookInfo) map[string]string {
	ret := make(map[string]string)
	v := reflect.ValueOf(in)
	typ := v.Type()
	for i := 0; i < v.NumField(); i++ {
		f := v.Field(i)
		var v string
		switch f.Type().Kind() {
		case reflect.Slice, reflect.Array:
			v = fmt.Sprintf("%d", f.Len())
		default:
			v = fmt.Sprintf("%s", f.String())
		}
		ret[typ.Field(i).Name] = v
	}
	return ret
}

type localProxy struct {
	re *regexp.Regexp
}

func newLocalProxy() *localProxy {
	patt := "http://www.duokan.com/reader/book_info/([a-f0-9]{32})/medium"
	return &localProxy{
		re: regexp.MustCompile(patt),
	}
}

func (p *localProxy) getURL(url string) ([]byte, error) {
	out := p.re.FindAllStringSubmatch(url, 1)
	if len(out) < 1 {
		return []byte(""), nil
	}
	switch out[0][1] {
	case "5e5c9d902fbd49c8ae1860a161a83242":
		return []byte(""), nil
	}
	return []byte(""), nil
}
